{"version":3,"file":"static/js/450.6b329372.chunk.js","mappings":"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","sources":["components/Reviews/reviews.jsx","utils/searchDataMovie.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"utils/searchDataMovie\";\n\nconst Reviews = () => {\n    const [reviewsMovie, setReviewsMovie] = useState([]);\n    const { id } = useParams();\n    useEffect(() => {\n      const reviews = async () =>\n        await getMovieReviews(id).then(res => setReviewsMovie(res.results));\n      reviews();\n    }, [id]);\n   \n  return (\n    <ul>\n    {reviewsMovie.map(({ author, content }) => {\n      return (\n        <li key={nanoid()}>\n      <h5>Author: {author}</h5>\n      <p>{content}</p>\n    </li>);\n  })}\n  </ul>);\n}\nexport default Reviews;","// 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGU5MzBjMmZhNzRjYWVhNjRmMjAyNmNmNzBlYzQxMyIsInN1YiI6IjY0NmQwNWJhZDE4NTcyMDE4MDJlOGYyOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gvC078v2ZEDlsUKlhf6XJhVHnGo7gwYMbWV5S3NVSKY';\n\n// const API_KEY = '98e930c2fa74caea64f2026cf70ec413';\nconst API_KEY = 'k_yjb6zjrs';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n// const BASE_URL = 'https://imdb-api.com/en/API';\n// const Most_Popular_Movies = `${BASE_URL}/MostPopularMovies/${API_KEY}`;\nconst TREND_URL = `${BASE_URL}/trending/all/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie`;\n\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGU5MzBjMmZhNzRjYWVhNjRmMjAyNmNmNzBlYzQxMyIsInN1YiI6IjY0NmQwNWJhZDE4NTcyMDE4MDJlOGYyOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gvC078v2ZEDlsUKlhf6XJhVHnGo7gwYMbWV5S3NVSKY',\n  },\n};\n\nexport async function trendMovies(page = 1) {\n  return await fetch(TREND_URL, options)\n    .then(response => {\n      return response.json();\n    })\n    .catch(error => console.log(error));\n}\n\n// export async function mostPopularMovies(page = 1) {\n//   return await fetch(Most_Popular_Movies)\n//     .then(response => {\n//       console.log(response)\n//       return response.json();\n//     })\n//     .catch(error => console.log(error));\n// }\n\nexport async function getMovieById(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}?api_key=${API_KEY}&language=en-US`,\n      options\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error();\n    });\n    return data;\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n\nexport async function FetchAPI(query, page = 1) {\n  try {\n    return await fetch(\n      `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}`,\n      options\n    ).then(res => res.json());\n  } catch (error) {\n    console.error('Smth wrong with api search fetch' + error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}/credits?api_key=${API_KEY}&language=en-US`,\n      options\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error();\n    });\n    return data;\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}/reviews?api_key=${API_KEY}&language=en-US`,\n      options\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error();\n    });\n    return data;\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n// return Promise.reject(new Error(`За запитом ${query} нічого не знайдено`));\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["useState","reviewsMovie","setReviewsMovie","id","useParams","useEffect","reviews","getMovieReviews","then","res","results","map","author","content","nanoid","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","options","method","headers","accept","Authorization","trendMovies","fetch","response","json","catch","error","console","log","getMovieById","ok","Error","data","alert","FetchAPI","query","page","getMovieCredits","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}