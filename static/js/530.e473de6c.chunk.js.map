{"version":3,"file":"static/js/530.e473de6c.chunk.js","mappings":"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","sources":["components/BackLink/backLink.jsx","components/MovieItem/movieItem.jsx","components/Movie/movie.jsx","utils/searchDataMovie.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { Link } from \"react-router-dom\"\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: lightgreen;\n  }\n`;\n\nexport const BackLink = ({to, children}) => {\n    return (<StyledLink to={to}>{children}</StyledLink>);\n}","import { nanoid } from 'nanoid';\n\nconst MovieItem = ({ movie }) => {\n\n  const { original_title, genres, poster_path, vote_average, overview } = movie.data;\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n    : '';\n  return (\n    <div style={{ display: 'Flex' }}>\n      <div>\n        <img src={poster}  alt=\"NO poster\" />\n      </div>\n      <div style={{ display: 'block', marginLeft: '20px' }}>\n        <h2 style={{marginTop: '0'}}>{original_title}</h2>\n        <ul>\n          <li>Average: {vote_average}</li>\n          <li>Overview: {overview}</li>\n          {genres.length ? (\n            <li>\n              {genres\n                .map(ganre => (\n                  <p key={nanoid()} style={{ display: 'inline' }}>\n                    {ganre.name}\n                  </p>\n                ))\n                .reduce((prev, curr) => [prev, ', ', curr])}\n            </li>\n          ) : (\n            ''\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieItem;\n","import { useEffect, useState, useRef } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from \"utils/searchDataMovie\";\nimport { BackLink } from \"components/BackLink/backLink\";\nimport { nanoid } from 'nanoid';\nimport MovieItem from \"../MovieItem/movieItem\";\n\nconst Movie = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n  const location = useLocation()\n  const backLinkHref = location.state?.from ?? '/';\n  const backLinkHrefRef = useRef(backLinkHref);\n\n  useEffect(() => {\n    const getMovie = async () => await getMovieById(id)\n      .then(res => setMovie(res))\n    \n      getMovie()       \n  }, [id]);\n\n  return (\n    <div>\n      <BackLink to={backLinkHrefRef.current}>{`<-`} Back to movies</BackLink>\n      <div> {movie && <MovieItem movie={movie} />}</div>\n      <div>\n        <div>\n          <h4>Additional Information</h4>\n          <ul>\n            <li key={nanoid()}>\n              <Link to='cast' >\n                Cast\n              </Link>\n            </li>\n            <li key={nanoid()}>\n              <Link to='reviews' >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <Outlet />\n      </div>\n    </div>\n  );\n  }\n\nexport default Movie;","import axios from 'axios';\n// 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGU5MzBjMmZhNzRjYWVhNjRmMjAyNmNmNzBlYzQxMyIsInN1YiI6IjY0NmQwNWJhZDE4NTcyMDE4MDJlOGYyOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gvC078v2ZEDlsUKlhf6XJhVHnGo7gwYMbWV5S3NVSKY';\n\nconst API_KEY = 'k_yjb6zjrs';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst Most_Popular_Movies = `${BASE_URL}/MostPopularMovies/${API_KEY}`;\nconst TREND_URL = `/trending/all/day`;\nconst SEARCH_URL = `/search/movie`;\nconst ID_URL = `/movie`;\n\naxios.defaults.baseURL = BASE_URL; \n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGU5MzBjMmZhNzRjYWVhNjRmMjAyNmNmNzBlYzQxMyIsInN1YiI6IjY0NmQwNWJhZDE4NTcyMDE4MDJlOGYyOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gvC078v2ZEDlsUKlhf6XJhVHnGo7gwYMbWV5S3NVSKY',\n  },\n};\n\nexport async function trendMovies(page = 1) {\n  const response = await axios.get(TREND_URL, options);\n  return response\n\n}\n\nexport async function mostPopularMovies(page = 1) {\n  return await fetch(Most_Popular_Movies)\n    .then(response => {\n      console.log(response)\n      return response.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport async function getMovieById(id) {\n  try {\n    const data = await axios.get(\n      `${ID_URL}/${id}?api_key=${API_KEY}&language=en-US`,\n      options )\n      return data;\n    \n  } catch (error) {\n    console.log(error)\n     alert(error.message);\n  }\n}\n\nexport async function searchMovie(query, page = 1) {\n  try {\n    return await axios.get(\n      `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}`,\n      options\n    )\n  } catch (error) {\n    alert(error.message);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}/credits?api_key=${API_KEY}&language=en-US`,\n      options\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error();\n    });\n    return data;\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}/reviews?api_key=${API_KEY}&language=en-US`,\n      options\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error();\n    });\n    return data;\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n// return Promise.reject(new Error(`За запитом ${query} нічого не знайдено`));\n\n//======== Інший АРІ для отримання рейтингу===========\n\n// const API_KEY = '98e930c2fa74caea64f2026cf70ec413';\n// const BASE_URL = 'https://imdb-api.com/en/API';\n//  const optionsAxios = {\n//    method: 'GET',\n//     url: 'http://www.omdbapi.com/?apikey=92a2488e',\n//    url: 'http://www.omdbapi.com/?apikey=92a2488e&s=t&page=2',\n//    params: { country: 'UA' },\n//    headers: {\n//      'X-RapidAPI-Key': '6d6fc46c1amshc0b8f4783759597p10d698jsna0b62de4f768',\n//      'X-RapidAPI-Host': 'imdb188.p.rapidapi.com',\n//    },\n//  };\n// export async function getFanFavorites() {\n// try {\n//   const response = await axios.request(optionsAxios);\n//   // return response;\n//   console.log(response);\n// } catch (error) {\n//   console.error(error);\n// }  \n// }","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["StyledLink","styled","Link","BackLink","to","children","movie","data","original_title","genres","poster_path","vote_average","overview","poster","style","display","src","alt","marginLeft","marginTop","length","map","ganre","name","nanoid","reduce","prev","curr","useState","setMovie","id","useParams","backLinkHref","useLocation","state","from","backLinkHrefRef","useRef","useEffect","getMovie","getMovieById","then","res","current","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","axios","options","method","headers","accept","Authorization","trendMovies","response","console","log","alert","message","searchMovie","query","page","getMovieCredits","fetch","ok","json","Error","getMovieReviews","size","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}