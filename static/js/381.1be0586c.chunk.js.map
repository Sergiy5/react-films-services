{"version":3,"file":"static/js/381.1be0586c.chunk.js","mappings":"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","sources":["components/ListMovies/listMovies.jsx","components/SearchMovie/searchMovie.jsx","pages/MoviePage.jsx","utils/searchDataMovie.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst ListMovies = ({ movies }) => {\n  const location = useLocation()\n  \n    return (\n      <ul>\n        {movies.map(({ title, id, name }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title ? title : name}\n              </Link>{' '}\n            </li>\n          );\n        })}\n      </ul>\n    );\n}\nexport default ListMovies","import { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport {searchMovie} from \"utils/searchDataMovie\"\nimport ListMovies from 'components/ListMovies/listMovies';\nimport { useEffect } from 'react';\n\n\nconst SearchMovie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovie] = useState([]);\n  const search = searchParams.get('query') ?? '';\n  const [query, setQuery] = useState(search);\n\n  // console.log('movies', movies);\n  // console.log('query', query);\n  \n  useEffect(() => {\n    if (query??search){\n   searchMovie(query).then(res =>     \n      setMovie(res.data.results))\n    }\n    \n  }, [query, search])\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const query = e.target.query.value.trim()\n    setQuery(query);\n  }\n  \n  const handleChange = ({ target }) => {\n    setSearchParams({query: target.value});\n  };\n  \n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={search}\n          onChange={handleChange}\n          type=\"text\"\n        />\n        <button type=\"submit\">submit</button>\n      </form>\n      {movies && <ListMovies movies={movies} />}\n    </div>\n  );\n    }\n\nexport default SearchMovie","import SearchMovie from \"components/SearchMovie/searchMovie\";\n\n\nconst MoviePage = () => {\n    return (\n      <>\n        <SearchMovie />\n      </>\n    );\n}\nexport default MoviePage;","import axios from 'axios';\n// 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGU5MzBjMmZhNzRjYWVhNjRmMjAyNmNmNzBlYzQxMyIsInN1YiI6IjY0NmQwNWJhZDE4NTcyMDE4MDJlOGYyOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gvC078v2ZEDlsUKlhf6XJhVHnGo7gwYMbWV5S3NVSKY';\n\nconst API_KEY = 'k_yjb6zjrs';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst Most_Popular_Movies = `${BASE_URL}/MostPopularMovies/${API_KEY}`;\nconst TREND_URL = `/trending/all/day`;\nconst SEARCH_URL = `/search/movie`;\nconst ID_URL = `/movie`;\n\naxios.defaults.baseURL = BASE_URL; \n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGU5MzBjMmZhNzRjYWVhNjRmMjAyNmNmNzBlYzQxMyIsInN1YiI6IjY0NmQwNWJhZDE4NTcyMDE4MDJlOGYyOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gvC078v2ZEDlsUKlhf6XJhVHnGo7gwYMbWV5S3NVSKY',\n  },\n};\n\nexport async function trendMovies(page = 1) {\n  const response = await axios.get(TREND_URL, options);\n  return response\n\n}\n\nexport async function mostPopularMovies(page = 1) {\n  return await fetch(Most_Popular_Movies)\n    .then(response => {\n      console.log(response)\n      return response.json();\n    })\n    .catch(error => console.log(error));\n}\n\nexport async function getMovieById(id) {\n  try {\n    const data = await axios.get(\n      `${ID_URL}/${id}?api_key=${API_KEY}&language=en-US`,\n      options )\n      return data;\n    \n  } catch (error) {\n    console.log(error)\n     alert(error.message);\n  }\n}\n\nexport async function searchMovie(query, page = 1) {\n  try {\n    return await axios.get(\n      `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}`,\n      options\n    )\n  } catch (error) {\n    alert(error.message);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}/credits?api_key=${API_KEY}&language=en-US`,\n      options\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error();\n    });\n    return data;\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}/reviews?api_key=${API_KEY}&language=en-US`,\n      options\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error();\n    });\n    return data;\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n// return Promise.reject(new Error(`За запитом ${query} нічого не знайдено`));\n\n//======== Інший АРІ для отримання рейтингу===========\n\n// const API_KEY = '98e930c2fa74caea64f2026cf70ec413';\n// const BASE_URL = 'https://imdb-api.com/en/API';\n//  const optionsAxios = {\n//    method: 'GET',\n//     url: 'http://www.omdbapi.com/?apikey=92a2488e',\n//    url: 'http://www.omdbapi.com/?apikey=92a2488e&s=t&page=2',\n//    params: { country: 'UA' },\n//    headers: {\n//      'X-RapidAPI-Key': '6d6fc46c1amshc0b8f4783759597p10d698jsna0b62de4f768',\n//      'X-RapidAPI-Host': 'imdb188.p.rapidapi.com',\n//    },\n//  };\n// export async function getFanFavorites() {\n// try {\n//   const response = await axios.request(optionsAxios);\n//   // return response;\n//   console.log(response);\n// } catch (error) {\n//   console.error(error);\n// }  \n// }"],"names":["movies","location","useLocation","map","title","id","name","to","state","from","useSearchParams","searchParams","setSearchParams","useState","setMovie","search","get","query","setQuery","useEffect","searchMovie","then","res","data","results","onSubmit","e","preventDefault","target","value","trim","autoComplete","autoFocus","placeholder","onChange","type","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","axios","options","method","headers","accept","Authorization","trendMovies","response","getMovieById","console","log","alert","message","page","getMovieCredits","fetch","ok","json","Error","getMovieReviews"],"sourceRoot":""}